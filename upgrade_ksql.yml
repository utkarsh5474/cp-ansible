---
- name: KSQL Upgrade
  hosts: ksql
  environment: "{{ proxy_env }}"
  serial: 1
  tasks:
    - import_role:
        name: confluent.variables_handlers

    - shell: "egrep 'ssl.client.auth ?= ?true' {{ ksql.config_file }}"
      register: mtls_check
      failed_when: false

    - name: Set MTLS Variable
      set_fact:
        ksql_ssl_mutual_auth_enabled: "{{ true if mtls_check.rc == 0 else false}}"

    - name: Get Package Facts
      package_facts:
        manager: auto

    - set_fact:
        confluent_server_enabled: true
      when: ansible_facts.packages['confluent-server'] is defined

    - set_fact:
        confluent_server_enabled: false
      when: ansible_facts.packages['confluent-kafka-2.12'] is defined

    - name: Set Current Package Version
      set_fact:
        ksql_current_version: "{{ ansible_facts.packages['confluent-ksqldb'][0]['version'] }}"

    - debug:
        msg: "Current version: {{ksql_current_version}}   Upgrade to version: {{confluent_package_version}}"

    - name: Assert Upgrading from Valid Version
      assert:
        that:
          - ksql_current_version is version('5.5.7', '>=')
        fail_msg: "Current KSQL Version: {{ksql_current_version}} is lower than the minimal supported upgrade version: 5.5.7"
        quiet: true

    - name: Upgrade Kafka Connect
      include_tasks: tasks/upgrade_component.yml
      vars:
        service_name: "{{ ksql_service_name }}"
        packages: "{{ ksql_packages }}"
        backup_files:
          - "{{ ksql.config_file }}"
          - "{{ ksql.systemd_override }}"
        restore_files:
          - "{{ ksql.config_file }}"
      when:
        - ksql_current_version != confluent_full_package_version
        - ksql_current_version != confluent_package_version

    - name: KSQL Health Check
      import_role:
        name: confluent.ksql
        tasks_from: health_check.yml
      when: not ansible_check_mode
