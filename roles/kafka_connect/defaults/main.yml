---
# More kafka_connect variables are defined in the variables role

### Boolean to reconfigure Kafka Connect's logging with the RollingFileAppender and log cleanup functionality.
kafka_connect_custom_log4j: "{{ custom_log4j }}"

### Root logger within Kafka Connect's log4j config. Only honored if kafka_connect_custom_log4j: true
kafka_connect_log4j_root_logger: "INFO, stdout, connectAppender, redactor"

### Max number of log files generated by Kafka Connect. Only honored if kafka_connect_custom_log4j: true
kafka_connect_max_log_files: 10

### Max size of a log file generated by Kafka Connect. Only honored if kafka_connect_custom_log4j: true
kafka_connect_log_file_size: 100MB

### Boolean to enable logredactor for kafka_connect. Defaults to logredactor_enabled. Works only when kafka_connect_custom_log4j is set to true
kafka_connect_logredactor_enabled: "{{ logredactor_enabled }}"

### Location of the kafka_connect logredactor rules file on the control node. This'll be copied to kafka_connect_logredactor_rule_path on the kafka_connect node. 
kafka_connect_logredactor_rule_path_local: "{{ logredactor_rule_path_local }}"

### Full path and name of the rules file on kafka_connect node. This is the location which will be referenced in the log4j property file when defining the redactor appender.
kafka_connect_logredactor_rule_path: "{{ logredactor_rule_path }}"

### URL address that contains or redirects to the redaction rules. If not "", this will be used to fetch rules. kafka_connect_logredactor_rule_path will be ignored.
kafka_connect_logredactor_rule_url: "{{ logredactor_rule_url }}"

### If present, it's used to specify a time in ms for how often the file system or URL of the policy rules will be checked for changes. If "", the policy rules will only be read once at startup.
kafka_connect_logredactor_policy_refresh_interval: "{{ logredactor_policy_refresh_interval }}"

### List of loggers to redact. This is specified alongside the user defined redactor name and appenderRefs to be used in redactor definition.  
kafka_connect_logredactor_logger_specs_list:
  - { logger_name: "log4j.rootLogger", appenderRefs: "connectAppender", redactor_name: "redactor1"}

kafka_connect_java_args:
  - "{% if kafka_connect_ssl_enabled|bool %}-Djdk.tls.ephemeralDHKeySize=2048{% endif %}"
  - "{% if kafka_connect_jolokia_enabled|bool %}-javaagent:{{jolokia_jar_path}}=config={{kafka_connect_jolokia_config}}{% endif %}"
  - "{% if kafka_connect_jmxexporter_enabled|bool %}-javaagent:{{jmxexporter_jar_path}}={{kafka_connect_jmxexporter_port}}:{{kafka_connect_jmxexporter_config_path}}{% endif %}"
  - "{% if kafka_connect_authentication_type == 'basic' %}-Djava.security.auth.login.config={{kafka_connect.jaas_file}}{% endif %}"

### Custom Java Args to add to the Connect Process
kafka_connect_custom_java_args: ""

kafka_connect_final_java_args: "{{ kafka_connect_java_args + [ kafka_connect_custom_java_args ] }}"

# For following dictionaries, Key/Value Pairs with empty values will not be written into override.conf

### Overrides to the Service Section of Connect Systemd File. This variable is a dictionary.
kafka_connect_service_overrides:
  LimitNOFILE: 100000
  User: "{{ kafka_connect_user if kafka_connect_user != kafka_connect_default_user else '' }}"
  Group: "{{ kafka_connect_group if kafka_connect_group != kafka_connect_default_group else '' }}"
  ExecStart: "{% if installation_method == 'archive' or kafka_connect_config_filename != kafka_connect_default_config_filename %}{{ kafka_connect.server_start_file }} {{ kafka_connect.config_file }}{% endif %}"

### Environment Variables to be added to the Connect Service. This variable is a dictionary.
kafka_connect_service_environment_overrides:
  KAFKA_HEAP_OPTS: "-Xms256M -Xmx2G"
  KAFKA_OPTS: "{{ kafka_connect_final_java_args | confluent.platform.java_arg_build_out }}"
  # Remove trailing slash if there is one
  KAFKA_LOG4J_OPTS: "{% if kafka_connect_custom_log4j|bool %}-Dlog4j.configuration=file:{{ kafka_connect.log4j_file }}{% endif %}"
  LOG_DIR: "{{ kafka_connect_log_dir|regex_replace('\\/$', '') }}"
  CONFLUENT_SECURITY_MASTER_KEY: "{% if kafka_connect_secrets_protection_enabled|bool %}{{secrets_protection_masterkey}}{% endif %}"

### Overrides to the Unit Section of Connect Systemd File. This variable is a dictionary.
kafka_connect_service_unit_overrides:

### Time in seconds to wait before starting Connect Health Checks.
kafka_connect_health_check_delay: 30

kafka_connect_secrets_protection_file: "{{ ssl_file_dir_final }}/kafka-connect-security.properties"
