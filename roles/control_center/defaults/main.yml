---
# More control_center variables are defined in the variables role

### Boolean to reconfigure Control Center's logging with RollingFileAppender and log cleanup
control_center_custom_log4j: "{{ custom_log4j }}"

### Root logger within Control Center's log4j config. Only honored if control_center_custom_log4j: true
control_center_log4j_root_logger: "INFO, main"

### Max number of log files generated by Control Center. Only honored if control_center_custom_log4j: true
control_center_max_log_files: 10

### Max size of a log file generated by Control Center. Only honored if control_center_custom_log4j: true
control_center_log_file_size: 100MB

### Boolean to enable logredactor for control_center. Defaults to logredactor_enabled. Works only when control_center_custom_log4j is set to true
control_center_logredactor_enabled: "{{ logredactor_enabled }}"

### Location of the control_center logredactor rules file on the control node. This'll be copied to control_center_logredactor_rule_path on the control_center node. 
control_center_logredactor_rule_path_local: "{{ logredactor_rule_path_local }}"

### Full path and name of the rules file on control_center node. This is the location which will be referenced in the log4j property file when defining the redactor appender.
control_center_logredactor_rule_path: "{{ logredactor_rule_path }}"

### URL address that contains or redirects to the redaction rules. If not "", this will be used to fetch rules. control_center_logredactor_rule_path will be ignored.
control_center_logredactor_rule_url: "{{ logredactor_rule_url }}"

### If present, it's used to specify a time in ms for how often the file system or URL of the policy rules will be checked for changes. If set to 0 (default), the policy rules will only be read once at startup.
control_center_logredactor_policy_refresh_interval: "{{ logredactor_policy_refresh_interval }}"

### List of loggers to redact. This is specified alongside the user defined redactor name and appenderRefs to be used in redactor definition.  
control_center_logredactor_logger_specs_list:
  - { logger_name: "log4j.rootLogger", appenderRefs: "main", redactor_name: "redactor1" }

control_center_java_args:
  - "{% if control_center_ssl_enabled|bool %}-Djdk.tls.ephemeralDHKeySize=2048{% endif %}"
  - "{% if control_center_authentication_type == 'basic' %}-Djava.security.auth.login.config={{control_center.jaas_file}}{% endif %}"

### Custom Java Args to add to the Control Center Process
control_center_custom_java_args: ""

control_center_final_java_args: "{{ control_center_java_args + [ control_center_custom_java_args ] }}"

### Full Path to the RocksDB Data Directory. If left as empty string, cp-ansible will not configure RocksDB
control_center_rocksdb_path: ""

# For following dictionaries, Key/Value Pairs with empty values will not be written into override.conf

### Overrides to the Service Section of Control Center Systemd File. This variable is a dictionary.
control_center_service_overrides:
  User: "{{ control_center_user if control_center_user != control_center_default_user else '' }}"
  Group: "{{ control_center_group if control_center_group != control_center_default_group else '' }}"
  ExecStart: "{% if installation_method == 'archive' %}{{ control_center.server_start_file }} {{ control_center.config_file }}{% endif %}"

### Environment Variables to be added to the Control Center Service. This variable is a dictionary.
control_center_service_environment_overrides:
  ROCKSDB_SHAREDLIB_DIR: "{{control_center_rocksdb_path}}"
  CONTROL_CENTER_HEAP_OPTS: "-Xmx6g"
  CONTROL_CENTER_OPTS: "{{ control_center_final_java_args | confluent.platform.java_arg_build_out }}"
  CONTROL_CENTER_LOG4J_OPTS: "{% if control_center_custom_log4j|bool %}-Dlog4j.configuration=file:{{control_center.log4j_file}}{% endif %}"
  # Remove trailing slash if there is one
  LOG_DIR: "{{ control_center_log_dir|regex_replace('\\/$', '') }}"
  CONFLUENT_SECURITY_MASTER_KEY: "{% if control_center_secrets_protection_enabled|bool %}{{secrets_protection_masterkey}}{% endif %}"

### Overrides to the Unit Section of Control Center Systemd File. This variable is a dictionary.
control_center_service_unit_overrides:

### Time in seconds to wait before starting Control Center Health Checks.
control_center_health_check_delay: 30

control_center_secrets_protection_file: "{{ ssl_file_dir_final }}/control-center-security.properties"
